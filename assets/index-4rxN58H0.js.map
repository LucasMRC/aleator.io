{"version":3,"file":"index-4rxN58H0.js","sources":["../../node_modules/.pnpm/svelte@4.2.8/node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/.pnpm/svelte@4.2.8/node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/.pnpm/svelte@4.2.8/node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/.pnpm/svelte@4.2.8/node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/.pnpm/svelte@4.2.8/node_modules/svelte/src/runtime/internal/transitions.js","../../node_modules/.pnpm/svelte@4.2.8/node_modules/svelte/src/runtime/internal/await_block.js","../../node_modules/.pnpm/svelte@4.2.8/node_modules/svelte/src/runtime/internal/each.js","../../node_modules/.pnpm/svelte@4.2.8/node_modules/svelte/src/runtime/internal/Component.js","../../node_modules/.pnpm/svelte@4.2.8/node_modules/svelte/src/shared/version.js","../../node_modules/.pnpm/svelte@4.2.8/node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../node_modules/.pnpm/svelte@4.2.8/node_modules/svelte/src/runtime/store/index.js","../../src/store.ts","../../src/components/icon.svelte","../../src/components/theme-selector.svelte","../../src/utils.ts","../../src/components/select.svelte","../../src/components/toggle.svelte","../../src/components/settings.svelte","../../src/components/word-wrapper.svelte","../../src/components/display.svelte","../../src/components/coffee.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { is_promise } from './utils.js';\nimport { check_outros, group_outros, transition_in, transition_out } from './transitions.js';\nimport { flush } from './scheduler.js';\nimport { get_current_component, set_current_component } from './lifecycle.js';\n\n/**\n * @template T\n * @param {Promise<T>} promise\n * @param {import('./private.js').PromiseInfo<T>} info\n * @returns {boolean}\n */\nexport function handle_promise(promise, info) {\n\tconst token = (info.token = {});\n\t/**\n\t * @param {import('./private.js').FragmentFactory} type\n\t * @param {0 | 1 | 2} index\n\t * @param {number} [key]\n\t * @param {any} [value]\n\t * @returns {void}\n\t */\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\t\tinfo.resolved = value;\n\t\tlet child_ctx = info.ctx;\n\t\tif (key !== undefined) {\n\t\t\tchild_ctx = child_ctx.slice();\n\t\t\tchild_ctx[key] = value;\n\t\t}\n\t\tconst block = type && (info.current = type)(child_ctx);\n\t\tlet needs_flush = false;\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroup_outros();\n\t\t\t\t\t\ttransition_out(block, 1, 1, () => {\n\t\t\t\t\t\t\tif (info.blocks[i] === block) {\n\t\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcheck_outros();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\t\t\tblock.c();\n\t\t\ttransition_in(block, 1);\n\t\t\tblock.m(info.mount(), info.anchor);\n\t\t\tneeds_flush = true;\n\t\t}\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t\tif (needs_flush) {\n\t\t\tflush();\n\t\t}\n\t}\n\tif (is_promise(promise)) {\n\t\tconst current_component = get_current_component();\n\t\tpromise.then(\n\t\t\t(value) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.then, 1, info.value, value);\n\t\t\t\tset_current_component(null);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t\t\tset_current_component(null);\n\t\t\t\tif (!info.hasCatch) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\t\tinfo.resolved = /** @type {T} */ (promise);\n\t}\n}\n\n/** @returns {void} */\nexport function update_await_block_branch(info, ctx, dirty) {\n\tconst child_ctx = ctx.slice();\n\tconst { resolved } = info;\n\tif (info.current === info.then) {\n\t\tchild_ctx[info.value] = resolved;\n\t}\n\tif (info.current === info.catch) {\n\t\tchild_ctx[info.error] = resolved;\n\t}\n\tinfo.block.p(child_ctx, dirty);\n}\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.8';\nexport const PUBLIC_VERSION = '4';\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","import { writable } from \"svelte/store\";\n\nexport const theme = writable<Theme>('dark');\nexport const openedSelect = writable<string>('');\nexport const word = writable<string>('');\nexport const timer = writable<number>(10);\nexport const displayingTimer = writable(false);\nexport const chosenDictionary = writable<Dictionary>(\"one\");","<script lang=\"ts\">\n    export let type: IconType;\n    export let color: string;\n    export let size = 48;\n    export let viewBox = \"0 0 48 48\";\n</script>\n\n<svg class=\"no-new-word\" width={size} height={size} viewBox={viewBox} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    {#if type === 'chevron_right'}\n        <path class=\"no-new-word\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M23 25.2695C22.9991 25.0768 22.9261 24.8925 22.7971 24.7568L16.639 17.9982L22.7971 11.2395C22.8618 11.1705 22.9128 11.0885 22.9471 10.9982C22.9814 10.908 22.9982 10.8113 22.9966 10.714C22.9942 10.5694 22.9511 10.4289 22.873 10.3104C22.7948 10.1919 22.6851 10.1008 22.5579 10.0488C22.4307 9.9967 22.2918 9.98604 22.1588 10.0182C22.0259 10.0503 21.905 10.1237 21.8116 10.229L15.1928 17.4926C15.0691 17.6282 15 17.8095 15 17.9982C15 18.1868 15.0691 18.3681 15.1928 18.5037L21.8116 25.7673C21.9055 25.8746 22.0278 25.9495 22.1624 25.9819C22.297 26.0144 22.4378 26.003 22.5662 25.9492C22.6946 25.8954 22.8047 25.8017 22.8821 25.6804C22.9595 25.5592 23.0006 25.4159 23 25.2695Z\" stroke-width=\"2\" stroke={color} stroke-linecap=\"round\" />\n    {:else if type === 'chevron_sm_up'}\n        <path class=\"no-new-word\" d=\"M4.36589 10.15L4.36597 10.15C4.4987 10.1494 4.62742 10.0994 4.72369 10.0085L8.00092 7.02241L11.2785 10.0088C11.3274 10.0544 11.385 10.09 11.4476 10.1138C11.5107 10.1377 11.5779 10.1494 11.6454 10.1483L11.6455 10.1483C11.7458 10.1466 11.8439 10.1168 11.9274 10.0617C12.0109 10.0066 12.0766 9.92829 12.1144 9.83579C12.1524 9.74316 12.1602 9.64149 12.1367 9.5442C12.1133 9.44737 12.0603 9.36061 11.9858 9.2943L8.35479 5.98558C8.25851 5.89778 8.1315 5.85 8.00092 5.85C7.87034 5.85 7.74333 5.89778 7.64705 5.98558L4.01638 9.29398C3.94073 9.36056 3.88682 9.44815 3.86322 9.54605C3.83947 9.64458 3.84791 9.74756 3.88706 9.84105C3.92617 9.93441 3.99361 10.013 4.07908 10.0675L4.15978 9.94107L4.07908 10.0675C4.16446 10.122 4.2644 10.1504 4.36589 10.15Z\" fill={color} stroke={color} stroke-width=\"0.3\"/>\n    {:else if type === 'chevron_sm_down'}\n        <path class=\"no-new-word\" d=\"M11.6341 5.85L11.634 5.85001C11.5013 5.85064 11.3726 5.90062 11.2763 5.99154L7.99908 8.97759L4.72151 5.99123C4.67262 5.94558 4.61504 5.91001 4.55235 5.88621C4.4893 5.86227 4.42208 5.8506 4.35458 5.8517L4.35446 5.8517C4.25425 5.85341 4.15613 5.88323 4.07264 5.93829C3.98906 5.99341 3.92341 6.07171 3.88556 6.16421C3.84765 6.25684 3.83977 6.35851 3.86327 6.4558C3.88666 6.55263 3.93972 6.63939 4.01418 6.7057L7.64521 10.0144C7.74149 10.1022 7.8685 10.15 7.99908 10.15C8.12966 10.15 8.25667 10.1022 8.35295 10.0144L11.9836 6.70602C12.0593 6.63944 12.1132 6.55185 12.1368 6.45395C12.1605 6.35542 12.1521 6.25244 12.1129 6.15895C12.0738 6.06559 12.0064 5.98703 11.9209 5.93249L11.8402 6.05893L11.9209 5.93249C11.8355 5.87799 11.7356 5.84957 11.6341 5.85Z\" fill={color} stroke={color} stroke-width=\"0.3\"/>\n    {:else if type === 'pause'}\n        <rect class=\"no-new-word\" x=\"0\" fill=\"none\"/>\n        <g class=\"no-new-word\">\n            <path class=\"no-new-word\" d=\"M5 16V4h3v12H5zm7-12h3v12h-3V4z\" fill={color}/>\n        </g>\n    {:else if type === 'play'}\n        <g class=\"no-new-word\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <g class=\"no-new-word\" transform=\"translate(-427.000000, -3765.000000)\" fill={color}>\n                <g class=\"no-new-word\" transform=\"translate(56.000000, 160.000000)\">\n                    <polygon class=\"no-new-word\" points=\"371 3605 371 3613 378 3609\"></polygon>\n                </g>\n            </g>\n        </g>\n    {:else if type === 'sun'}\n        <g class=\"no-new-word\">\n            <path class=\"no-new-word\" d=\"M 45 68 c -12.682 0 -23 -10.317 -23 -23 c 0 -12.682 10.318 -23 23 -23 c 12.683 0 23 10.318 23 23 C 68 57.683 57.683 68 45 68 z\" fill={color} stroke-linecap=\"round\" />\n            <path class=\"no-new-word\" d=\"M 38.652 17.61 c -0.292 0 -0.573 -0.127 -0.765 -0.356 c -0.239 -0.284 -0.301 -0.677 -0.161 -1.021 l 6.348 -15.61 C 44.227 0.247 44.593 0 45 0 s 0.773 0.247 0.926 0.623 l 6.349 15.61 c 0.14 0.344 0.077 0.737 -0.162 1.021 c -0.238 0.284 -0.616 0.414 -0.978 0.333 c -4.045 -0.881 -8.228 -0.881 -12.271 0 C 38.794 17.603 38.723 17.61 38.652 17.61 z\" fill={color} stroke-linecap=\"round\" />\n            <path class=\"no-new-word\" d=\"M 45 90 c -0.407 0 -0.773 -0.246 -0.926 -0.623 l -6.348 -15.61 c -0.14 -0.344 -0.078 -0.737 0.161 -1.021 c 0.239 -0.284 0.615 -0.412 0.978 -0.333 c 4.043 0.882 8.226 0.882 12.271 0 c 0.363 -0.08 0.74 0.05 0.978 0.333 c 0.239 0.283 0.302 0.677 0.162 1.021 l -6.349 15.61 C 45.773 89.754 45.407 90 45 90 z\" fill={color} transform=\" matrix(1 0 0 1 0 0) \" stroke-linecap=\"round\" />\n            <path class=\"no-new-word\" d=\"M 16.61 52.349 c -0.127 0 -0.255 -0.024 -0.377 -0.073 l -15.61 -6.349 C 0.247 45.773 0 45.407 0 45 s 0.247 -0.773 0.624 -0.926 l 15.61 -6.348 c 0.343 -0.14 0.737 -0.078 1.021 0.161 c 0.284 0.239 0.412 0.616 0.333 0.978 c -0.441 2.021 -0.665 4.086 -0.665 6.135 c 0 2.049 0.224 4.113 0.665 6.136 c 0.079 0.362 -0.049 0.739 -0.333 0.978 C 17.071 52.269 16.842 52.349 16.61 52.349 z\" fill={color} stroke-linecap=\"round\" />\n            <path class=\"no-new-word\" d=\"M 73.39 52.349 c -0.231 0 -0.461 -0.08 -0.644 -0.235 c -0.284 -0.238 -0.412 -0.615 -0.333 -0.978 c 0.44 -2.022 0.664 -4.087 0.664 -6.136 c 0 -2.049 -0.224 -4.114 -0.664 -6.135 c -0.079 -0.362 0.049 -0.739 0.333 -0.978 c 0.283 -0.239 0.676 -0.301 1.021 -0.161 l 15.61 6.348 C 89.754 44.227 90 44.593 90 45 s -0.246 0.773 -0.623 0.926 l -15.61 6.349 C 73.645 52.324 73.517 52.349 73.39 52.349 z\" fill={color} stroke-linecap=\"round\" />\n            <path class=\"no-new-word\" d=\"M 20.437 30.415 c -0.028 0 -0.057 -0.001 -0.085 -0.004 c -0.37 -0.032 -0.692 -0.266 -0.836 -0.607 l -6.549 -15.527 c -0.158 -0.375 -0.073 -0.808 0.214 -1.096 c 0.288 -0.288 0.722 -0.371 1.096 -0.214 l 15.527 6.549 c 0.342 0.144 0.576 0.466 0.607 0.835 c 0.032 0.37 -0.144 0.727 -0.456 0.927 c -1.743 1.119 -3.36 2.42 -4.809 3.868 c -1.448 1.449 -2.75 3.066 -3.868 4.809 C 21.093 30.243 20.775 30.415 20.437 30.415 z\" fill={color} stroke-linecap=\"round\" />\n            <path class=\"no-new-word\" d=\"M 76.112 77.112 c -0.131 0 -0.263 -0.025 -0.389 -0.078 l -15.526 -6.549 c -0.342 -0.145 -0.576 -0.467 -0.607 -0.836 c -0.032 -0.37 0.144 -0.727 0.456 -0.928 c 1.745 -1.121 3.363 -2.423 4.808 -3.868 l 0 0 c 1.445 -1.444 2.747 -3.063 3.868 -4.808 c 0.201 -0.312 0.553 -0.489 0.928 -0.456 c 0.369 0.031 0.691 0.266 0.836 0.607 l 6.549 15.526 c 0.157 0.375 0.073 0.809 -0.215 1.096 C 76.628 77.011 76.372 77.112 76.112 77.112 z\" fill={color} stroke-linecap=\"round\" />\n            <path class=\"no-new-word\" d=\"M 69.563 30.414 c -0.339 0 -0.656 -0.171 -0.842 -0.459 c -1.121 -1.746 -2.423 -3.363 -3.868 -4.809 l 0 0 c -1.447 -1.447 -3.065 -2.749 -4.808 -3.868 c -0.313 -0.2 -0.488 -0.557 -0.456 -0.927 c 0.031 -0.37 0.266 -0.691 0.607 -0.835 l 15.526 -6.549 c 0.373 -0.158 0.808 -0.074 1.096 0.214 c 0.288 0.288 0.372 0.721 0.215 1.096 l -6.549 15.527 c -0.145 0.342 -0.467 0.576 -0.836 0.607 C 69.62 30.413 69.592 30.414 69.563 30.414 z\" fill={color} stroke-linecap=\"round\" />\n            <path class=\"no-new-word\" d=\"M 13.887 77.112 c -0.26 0 -0.516 -0.102 -0.707 -0.293 c -0.288 -0.288 -0.373 -0.721 -0.214 -1.096 l 6.549 -15.526 c 0.144 -0.342 0.466 -0.576 0.835 -0.607 c 0.37 -0.043 0.727 0.144 0.927 0.456 c 1.119 1.742 2.421 3.36 3.868 4.808 l 0 0 c 1.446 1.446 3.063 2.747 4.809 3.868 c 0.312 0.201 0.488 0.558 0.456 0.928 c -0.032 0.369 -0.266 0.691 -0.607 0.836 l -15.527 6.549 C 14.15 77.087 14.019 77.112 13.887 77.112 z\" fill={color} stroke-linecap=\"round\" />\n        </g>\n    {:else if type === 'moon'}\n        <g class=\"no-new-word\">\n            <path class=\"no-new-word\" d=\"M 87.823 60.7 c -0.463 -0.423 -1.142 -0.506 -1.695 -0.214 c -15.834 8.398 -35.266 2.812 -44.232 -12.718 c -8.966 -15.53 -4.09 -35.149 11.101 -44.665 c 0.531 -0.332 0.796 -0.963 0.661 -1.574 c -0.134 -0.612 -0.638 -1.074 -1.259 -1.153 c -9.843 -1.265 -19.59 0.692 -28.193 5.66 C 13.8 12.041 6.356 21.743 3.246 33.35 S 1.732 57.08 7.741 67.487 c 6.008 10.407 15.709 17.851 27.316 20.961 C 38.933 89.486 42.866 90 46.774 90 c 7.795 0 15.489 -2.044 22.42 -6.046 c 8.601 -4.966 15.171 -12.43 18.997 -21.586 C 88.433 61.79 88.285 61.123 87.823 60.7 z\" fill={color} stroke-linecap=\"round\" />\n        </g>\n    {:else if type === 'coffee'}\n        <path d=\"M12.406 14.75c-0.094-2.094-0.219-3.219-1.469-4.594-1.594-1.781-2.188-3.5-0.875-6.156 0.344 1.781 0.469 3.375 1.719 4.344s2.281 3.594 0.625 6.406zM10.063 14.75c-0.063-1.125-0.125-1.688-0.813-2.469-0.844-0.938-1.188-1.844-0.469-3.281 0.188 0.969 0.219 1.813 0.906 2.313s1.281 1.938 0.375 3.438zM15.719 24.625h5.688c0.344 0 0.469 0.25 0.25 0.531 0 0-2.219 2.844-5.281 2.844h-10.969s-5.281-2.844-5.281-2.844c-0.219-0.281-0.125-0.531 0.219-0.531h5.625c-0.781-0.406-1.938-2.188-1.938-4.406v-4.688h13.688v0.375c0.438-0.375 0.969-0.563 1.531-0.563 0.781 0 2.25 0.813 2.25 2.219 0 2.031-1.344 2.781-2.125 3.313 0 0-1.469 1.156-2.5 2.5-0.344 0.594-0.75 1.063-1.156 1.25zM19.25 16.188c-0.5 0-1.125 0.219-1.531 1.219v2.594c0 0.344-0.031 0.75-0.094 1.094 0.688-0.688 1.5-1.156 1.5-1.156 0.5-0.344 1.5-1 1.5-2.281 0.031-0.906-0.813-1.469-1.375-1.469zM6.406 16.563h-0.875v1.281h0.875v-1.281zM6.406 18.594h-0.875v2.094s0.25 2.813 2.031 3.656c-1.094-1.281-1.156-2.75-1.156-3.656v-2.094z\" fill={color}></path>\n    {/if}\n</svg>\n\n<style>\n    svg {\n        margin: 0 auto;\n    }\n</style>","<script lang=\"ts\">\n    import { theme } from \"../store\";\n    import Icon from \"./icon.svelte\";\n\n\tconst handleThemeChange = (e: Event) => {\n\t\tconst input = e.target as HTMLInputElement;\n\t\tif (input.checked) {\n\t\t\tconst newTheme = input.id as Theme;\n\t\t\ttheme.set(newTheme);\n\t\t\tlocalStorage.setItem('theme', newTheme);\n\t\t}\n\t};\n\n</script>\n\n<div class=\"theme-selector no-new-word\">\n    <label class=\"no-new-word\">\n        <Icon size={24} type=\"sun\" color={$theme === 'light' ? '#352D2C' : '#8D99AE'} viewBox=\"0 0 85 85\"/>\n        <input on:change={handleThemeChange} class=\"no-new-word\" type=\"radio\" id=\"light\" name=\"theme\" hidden />\n    </label>\n    <label class=\"no-new-word\">\n        <Icon size={24} type=\"moon\" color={$theme === 'light' ? '#352D2C' : '#8D99AE'} viewBox=\"0 -5 100 100\"/>\n        <input on:change={handleThemeChange} class=\"no-new-word\" type=\"radio\" id=\"dark\" name=\"theme\" hidden />\n    </label>\n</div>\n\n<style>\n\tdiv.theme-selector {\n\t\tposition: absolute;\n\t\tbottom: 1rem;\n\t\tleft: 1rem;\n\t\tdisplay: flex;\n\t\tgap: .5rem;\n\t}\n\n\tdiv.theme-selector label {\n\t\tbackground: transparent;\n\t\tborder: none;\n\t}\n</style>","export function generateUUID(): string {\n    const timestamp: number = new Date().getTime();\n    const randomValue1: string = Math.random().toString(36).substring(2, 10);\n    const randomValue2: string = 'xxyxxxxyxxxx'.replace(/[xy]/g, function(c) {\n        const r = Math.random() * 16 | 0;\n        const v = c === 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n\n    const uuid: string = `${timestamp}-${randomValue1}-${randomValue2}`;\n    return uuid;\n}\n\nexport function formatTime(seconds: number): string {\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const remainingSeconds = seconds % 60;\n\n    function addLeadingZero(number: number): string {\n        if (number < 10) return `0${number}`;\n        return number.toString();\n    };\n\n    return `${addLeadingZero(minutes)}:${addLeadingZero(remainingSeconds)}`;\n}\n","<script lang=\"ts\">\n    import { openedSelect } from \"../store\";\n    import { generateUUID } from \"../utils\";\n    import Icon from \"./icon.svelte\";\n    import { theme } from \"../store\";\n\n    export let name: string | undefined;\n    export let value: string | null;\n    export let options: { value: string | null; label: string; default?: boolean }[] = [];\n    export let handleChange: (e: Event) => void;\n\n    const selectId = generateUUID();\n\n    $: inputValue = options.find((option) =>\n        value ? option.value === value : option.default\n    )?.label ?? '';\n    $: opened = $openedSelect === selectId;\n\n    function handleClickOnOption(e: Event) {\n        openedSelect.set('');\n        e.preventDefault();\n        handleChange(e);\n    }\n\n    function handleToggleMenu(e: Event) {\n        const target = e.target as HTMLDivElement;\n        e.preventDefault();\n        if ($openedSelect === selectId) {\n            openedSelect.set('');\n        } else {\n            openedSelect.set(target.id);\n        }\n        opened = !opened;\n    }\n</script>\n\n<div class=\"custom-select no-new-word\">\n    <select hidden id={name} value={value}>\n        {#each options as option}\n            <option value={option.value}>{option.label}</option>\n        {/each}\n    </select>\n    <button class=\"custom-input no-new-word\" id={selectId} on:click={handleToggleMenu}>\n        {inputValue}\n        <span class=\"select-icon no-new-word\">\n            <Icon color={$theme === 'light' ? '#BEA8A7' : '#8D99AE'} size={16} type={opened ? 'chevron_sm_up' : 'chevron_sm_down'} viewBox=\"0 0 16 16\" />\n        </span>\n    </button>\n    {#if opened}\n    <div class=\"select-menu no-new-word\">\n            {#each options as option}\n                <label class=\"select-option no-new-word\">\n                    <input\n                        type=\"radio\"\n                        class=\"no-new-word\"\n                        id={option.value}\n                        {name}\n                        checked={value === option.value || !value && option.default}\n                        value={option.value}\n                        on:change={handleClickOnOption}\n                        on:click={() => value === option.value && openedSelect.set('')}\n                        hidden\n                    />\n                    {option.label}\n                </label>\n            {/each}\n        </div>\n    {/if}\n</div>\n\n<style>\n    div.custom-select {\n        position: relative;\n        width: 100%;\n    }\n\n    button.custom-input, div.select-menu {\n        border-radius: .5rem;\n        border: none;\n        background-color: var(--background-secondary-color);\n        text-align: left;\n        color: var(--font-secondary-color);\n        width: 100%;\n    }\n\n    button.custom-input {\n        padding: .25rem .75rem;\n        position: relative;\n    }\n\n    button.custom-input:hover {\n        transform: none;\n    }\n\n    .select-icon {\n        position: absolute;\n        right: .75rem;\n        top: 50%;\n        transform: translateY(-50%);\n    }\n\n    div.select-menu {\n        overflow: hidden;\n        position: absolute;\n        left: 0;\n        right: 0;\n        z-index: 2;\n        max-height: 10.5rem;\n        overflow-y: auto;\n    }\n\n    label.select-option:not(:has(input:checked)):hover {\n        cursor: pointer;\n        color: var(--font-primary-color);\n    }\n    label.select-option:has(input:checked) {\n        font-weight: bold;\n    }\n\n    label.select-option {\n        display: block;\n        padding-inline: .75rem;\n        line-height: 1.5;\n    }\n\n</style>","<script lang=\"ts\">\n    export let value: boolean;\n    export let name: string;\n    export let id: string;\n    export let options: { value: boolean; label: string }[];\n    export let onChange: (e: Event) => void;\n</script>\n\n<div class=\"options-container no-new-word\">\n    <input type=\"text\" name=\"timer-value\" id={id} {value} hidden />\n    {#each options as option}\n        <label class=\"switch no-new-word\">\n            <input class=\"no-new-word\" type=\"radio\" on:change={onChange} name={name} value={option.value} checked={value === option.value} hidden />\n            {option.label}\n        </label>\n    {/each}\n</div>\n\n<style>\n    div.options-container {\n        border-radius: .5rem;\n        display: flex;\n        gap: .25rem;\n        cursor: pointer;\n        padding: .25rem;\n        place-items: center;\n    }\n\n    label.switch {\n        width: 50%;\n        user-select: none;\n        text-align: center;\n        height: 100%;\n        line-height: calc(3rem - 50%);\n        cursor: pointer;\n        color: var(--disabled-font-color);\n        border-radius: .5rem;\n    }\n\n    label.switch:has(input[type=\"radio\"]:checked) {\n        background: var(--background-secondary-color);\n        color: var(--primary-font-color);\n        font-weight: bold;\n    }\n</style>","<script lang=\"ts\">\n    import { chosenDictionary, displayingTimer, timer } from \"../store\";\n    import Select from \"./select.svelte\";\n    import Toggle from \"./toggle.svelte\";\n\n    export let dictionary: any;\n    export let handleNewWord: () => void;\n\n\tconst timerIntervals: number[] = [];\n\n\tconst dictionaryOptions = [\n\t\t{ label: `Dic. 1 (${dictionary.one.length} palabras)`, value: \"one\" },\n\t\t{ label: `Dic. 2 (${dictionary.two.length} palabras)`, value: \"two\" },\n\t\t{ label: `Dic. 3 (${dictionary.three.length} palabras)`, value: \"three\" },\n\t\t{ label: `Dic. 4 (${dictionary.four.length} palabras)`, value: \"four\" }\n\t];\n\n\tconst handleTimerChange = (action: 'add' | 'subtract') => {\n\t\tif (action === 'add') {\n\t\t\tif ($timer >= 60) return;\n\t\t\telse timer.update(prev => ++prev);\n\t\t}\n\t\telse if ($timer <= 5) return;\n\t\telse timer.update(prev => --prev);\n\t\tif (timerIntervals.length) {\n\t\t\tfor (const interval of timerIntervals) {\n\t\t\t\tclearInterval(interval);\n\t\t\t}\n\t\t}\n\t\ttimerIntervals.push(setInterval(handleNewWord, $timer * 1000));\n\t};\n\n\tconst handleDictionaryChange = (e: Event) => {\n\t\tconst input = e.target as HTMLInputElement;\n\t\tif (input.value === $chosenDictionary) return;\n\t\tchosenDictionary.set(input.value as Dictionary);\n\t}\n\n\tconst handleDisplayTimer = (e: Event) => {\n\t\tconst input = e.target as HTMLInputElement;\n\t\tif (!input.checked) return;\n\t\tif (timerIntervals.length) {\n\t\t\tfor (const interval of timerIntervals) {\n\t\t\t\tclearInterval(interval);\n\t\t\t}\n\t\t}\n\t\tif (input.value === 'true') timerIntervals.push(setInterval(handleNewWord, $timer * 1000));\n\t\tdisplayingTimer.set(input.value === 'true');\n\t};\n\n    const toggleOptions = [\n        { label: 'On', value: true },\n        { label: 'Off', value: false }\n    ];\n</script>\n\n<div class=\"settings\">\n    <div class=\"select-container\">\n        <Select name=\"dictionary\" options={dictionaryOptions} handleChange={handleDictionaryChange} value={$chosenDictionary} />\n    </div>\n    <label class=\"no-new-word timer-label\" for=\"timer\">Timer</label>\n    <Toggle value={$displayingTimer} name=\"timer-toggle\" id=\"timer\" onChange={handleDisplayTimer} options={toggleOptions} />\n    <input class=\"no-new-word timer{$displayingTimer ? '' : ' hidden'}\" type=\"number\" id=\"seconds\" value={$timer} aria-label=\"timer\">\n    <button on:click={() => handleTimerChange('add')} class=\"no-new-word add{$displayingTimer ? '' : ' hidden'}\">+</button>\n    <button on:click={() => handleTimerChange('subtract')} class=\"no-new-word subtract{$displayingTimer ? '' : ' hidden'}\">-</button>\n</div>\n\n<style>\n    div.settings {\n\t\tposition: absolute;\n\t\ttop: 4rem;\n\t\tleft: 50%;\n\t\ttranslate: -50% 0;\n\t\tfont-size: 1.5rem;\n\t\twidth: max-content;\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 4fr 2fr;\n\t\talign-items: center;\n\t\tcolor: var(--font-secondary-color);\n\t}\n\n\tdiv.settings label.timer-label {\n\t\tpadding: .25rem .75rem;\n\t\t/* grid-column: span 2; */\n\t}\n\n\tdiv.settings > div.select-container {\n\t\tgrid-column: span 2;\n\t}\n\n\tdiv.settings > button {\n\t\tbackground: transparent;\n\t\tposition: absolute;\n\t\tcolor: var(--font-primary-color);\n\t\tborder-radius: .3rem;\n\t\tfont-weight: bold;\n\t\tbottom: 0;\n\t\theight: 3rem;\n\t\twidth: 3rem;\n\t\tfont-size: 2rem;\n\t\tfont-family: inherit;\n\t\tborder: none;\n\t}\n\n\tdiv.settings > button.add {\n\t\tleft: 7rem;\n\t}\n\n\tdiv.settings > button.subtract {\n\t\tright: 7rem;\n\t}\n\n\tinput.timer {\n\t\tgrid-column: span 2;\n\t\tpointer-events: none;\n\t\tcolor: var(--font-primary-color);\n\t\toutline: none;\n\t\tborder: none;\n\t\tbackground: transparent;\n\t\tfont-size: 3rem;\n\t\twidth: 25rem;\n\t\theight: 3rem;\n\t\tfont-family: inherit;\n\t\tfont-weight: bold;\n\t\ttext-align: center;\n\t}\n\n    @container (width < 640px) {\n\t\tdiv.settings {\n\t\t\tfont-size: 1.1rem;\n\t\t\trow-gap: .25rem;\n\t\t}\n\n\t\tdiv.settings > button {\n\t\t\theight: 2.5rem;\n\t\t\twidth: 2.5rem;\n            line-height: 0;\n\t\t}\n\n\t\tdiv.settings > button.add {\n\t\t\tleft: 10rem;\n\t\t}\n\n\t\tdiv.settings > button.subtract {\n\t\t\tright: 10rem;\n\t\t}\n\t\tinput.timer {\n\t\t\twidth: 17rem;\n\t\t}\n\t}\n\n    @media screen\n\tand (orientation: landscape)\n\tand (height < 640px) {\n        div.settings {\n\t\t\tfont-size: 1.1rem;\n\t\t\trow-gap: .25rem;\n\t\t\ttop: 2rem;\n\t\t\tgrid-template-columns: 4fr 3fr;\n\t\t}\n\n\t\tdiv.settings > button {\n\t\t\theight: 2.5rem;\n\t\t\twidth: 2.5rem;\n            line-height: 0;\n\t\t}\n\n\t\tdiv.settings > button.add {\n\t\t\tleft: 10rem;\n\t\t}\n\n\t\tdiv.settings > button.subtract {\n\t\t\tright: 10rem;\n\t\t}\n\t\tinput.timer {\n\t\t\twidth: 17rem;\n\t\t\tfont-size: 2rem;\n\t\t}\n    }\n</style>","<script lang=\"ts\">\n    import { timer, displayingTimer, word } from '../store'\n\n    let interval: number;\n\n    $: countdown = $displayingTimer ? $timer : 0;\n    $: {\n        if (interval) clearInterval(interval);\n        interval = setInterval(() => {\n            if (!$displayingTimer) return;\n            if (countdown === 1) countdown = $timer;\n            else countdown -= 1;\n        }, 1000);\n    }\n</script>\n\n<div class=\"circle\">\n    {#if $displayingTimer}\n        <div class=\"progress-bar\" style=\"--progress-value: {($timer + 1 - countdown) / $timer * 100};\" />\n    {/if}\n    {#await $word}\n        <h1 id=\"word\">Cargando...</h1>\n    {:then word}\n        <h1 id=\"word\">{word}</h1>\n    {/await}\n</div>\n\n<style>\n    div.circle {\n        border-radius: 50%;\n        position: relative;\n        width: 15rem;\n        height: 15rem;\n    }\n\n    div.progress-bar {\n        width: 100%;\n        height: 100%;\n        border-radius: 50%;\n        background: radial-gradient(closest-side, var(--background-primary-color) 80%, transparent 82% 100%),\n                    conic-gradient(\n                        var(--background-secondary-color) calc(var(--progress-value) * 1%),\n                        var(--background-primary-color) calc((var(--progress-value) + 0.25) * 1%));\n        transition: background linear 1s;\n    }\n\n    h1#word {\n\t\tfont-size: 6rem;\n\t\ttext-transform: capitalize;\n\t\ttext-align: center;\n\t\tfont-weight: lighter;\n        position: absolute;\n        width: max-content;\n        max-width: 100dvw;\n        top: 45%;\n        left: 50%;\n        translate: -50% -50%;\n\t}\n\n    @container (width < 640px) {\n        div.circle {\n            width: 10rem;\n            height: 10rem;\n        }\n\n\t\th1#word {\n\t\t\tfont-size: 4rem;\n\t\t}\n    }\n\n    @media screen\n\tand (orientation: landscape)\n\tand (height < 640px) {\n        div.circle {\n            width: 5rem;\n            height: 5rem;\n        }\n\n        h1#word {\n\t\t\tfont-size: 3.5rem;\n\t\t}\n\t}\n</style>","<script lang=\"ts\">\nimport {\n\t\tword,\n\t\tdisplayingTimer\n\t} from '../store';\n    import WordWrapper from './word-wrapper.svelte';\n\n</script>\n\n<div class=\"display-container\">\n\t<p class={`instructions${$displayingTimer ? ' hidden' : ''}`}>Click/Tap o Espacio</p>\n\t<WordWrapper />\n</div>\n\n<style>\n\tdiv.display-container {\n\t\tdisplay: grid;\n\t\tjustify-items: center;\n\t}\n\n\tp.instructions {\n\t\ttext-align: center;\n\t\tfont-weight: bold;\n\t}\n\n    @container (width < 640px) {\n\t\th1#word {\n\t\t\tfont-size: 2.5rem;\n\t\t}\n\t}\n\n\t@media screen\n\tand (orientation: landscape)\n\tand (height < 640px) {\n\t\tdiv.display-container {\n\t\t\tgrid-row: 2;\n\t\t}\n\t}\n</style>","<script lang=\"ts\">\n    import Icon from \"./icon.svelte\";\n    import { theme } from \"../store\";\n</script>\n\n<a class=\"coffee-link\" target=\"_blank\" href=\"http://buymeacoffee.com/lucas.maria\" rel=\"noopener noreferrer\" title=\"Invitame un café\">\n    <Icon type=\"coffee\" color={$theme === 'light' ? '#352D2C' : '#8D99AE'} size={36} viewBox=\"0 0 24 30\" />\n</a>\n\n<style>\n    a.coffee-link {\n        position: absolute;\n        bottom: 1rem;\n        right: 1rem;\n    }\n</style>","<script lang=\"ts\">\n    import { onMount } from 'svelte';\n\timport * as dictionary from './diccionario.json';\n\timport {\n\t\tword,\n\t\ttheme,\n\t\tdisplayingTimer,\n\t\tchosenDictionary\n\t} from './store';\n    import ThemeSelector from './components/theme-selector.svelte';\n    import Settings from './components/settings.svelte';\n    import Display from './components/display.svelte';\n    import BuyMeACoffee from './components/coffee.svelte';\n\n\tconst handleNewWord = () => {\n\t\tconst newWord = dictionary[$chosenDictionary][Math.floor(Math.random() * dictionary[$chosenDictionary].length)];\n\t\tword.set(newWord);\n\t};\n\n\tonMount(() => {\n\t\tconst storedTheme = localStorage.getItem('theme');\n\t\tif (storedTheme) theme.set(storedTheme as Theme);\n\t\tdocument.addEventListener(\"keydown\", (e: KeyboardEvent) => {\n\t\t\tif ($displayingTimer) return;\n\t\t\tif (e.code === 'Space')\n\t\t\t\thandleNewWord();\n\t\t});\n\t\tdocument.body.addEventListener('click', e => {\n\t\t\te.stopPropagation();\n\t\t\tconst target = e.target as HTMLElement;\n\t\t\tif ($displayingTimer || target.classList.contains('no-new-word')) return;\n\t\t\thandleNewWord();\n\t\t});\n\t\thandleNewWord();\n\t});\n</script>\n\n<main class=\"screen\" data-theme={$theme}>\n\t<Settings dictionary={dictionary} handleNewWord={handleNewWord} />\n\t<Display />\n\t<ThemeSelector />\n\t<BuyMeACoffee />\n</main>\n\n<style>\n\t:root {\n\t\t--light-theme-primary-background-color: #F4DBD8;\n\t\t--light-theme-secondary-background-color: #edcfcc;\n\t\t--light-theme-primary-font-color:  #3f302f;\n\t\t--light-theme-secondary-font-color:  #352D2C;\n\t\t--dark-theme-primary-background-color: #2B2D42;\n\t\t--dark-theme-secondary-background-color: #393c54;\n\t\t--dark-theme-primary-font-color: #8D99AE;\n\t\t--dark-theme-secondary-font-color: #bdd0f1;\n\t}\n\n\tmain.screen[data-theme=\"light\"] {\n\t\t--background-primary-color: var(--light-theme-primary-background-color);\n\t\t--background-secondary-color: var(--light-theme-secondary-background-color);\n\t\t--font-primary-color: var(--light-theme-primary-font-color);\n\t\t--font-secondary-color: var(--light-theme-secondary-font-color);\n\t}\n\n\tmain.screen[data-theme=\"dark\"] {\n\t\t--background-primary-color: var(--dark-theme-primary-background-color);\n\t\t--background-secondary-color: var(--dark-theme-secondary-background-color);\n\t\t--font-primary-color: var(--dark-theme-primary-font-color);\n\t\t--font-secondary-color: var(--dark-theme-secondary-font-color);\n\t}\n\n\tmain.screen {\n\t\tcontainer-type: inline-size;\n\t\tposition: relative;\n\t\theight: 100dvh;\n\t\twidth: 100dvw;\n\t\tdisplay: grid;\n\t\tplace-items: center;\n\t\tfont-family: Inconsolata;\n\t\tbackground-color: var(--background-primary-color);\n\t\tcolor: var(--font-primary-color)\n\t}\n\n\t@media screen\n\tand (orientation: landscape)\n\tand (height < 640px) {\n\t\tmain.screen {\n\t\t\tgrid-template-rows: 2fr 7fr;\n\t\t}\n\t}\n</style>\n","import './app.css'\nimport './reset.css'\n// @ts-ignore\nimport App from './App.svelte';\n\nconst app = new App({\n  target: document.getElementById('app') as HTMLElement,\n})\n\nexport default app\n"],"names":["noop","is_promise","value","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","a","b","is_empty","obj","subscribe","store","callbacks","callback","unsub","component_subscribe","component","null_to_empty","append","target","node","insert","anchor","detach","destroy_each","iterations","detaching","i","element","name","svg_element","text","data","space","listen","event","handler","options","attr","attribute","children","set_data","set_input_value","input","set_style","key","important","select_option","select","mounting","option","current_component","set_current_component","get_current_component","onMount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","seen_callbacks","flushidx","saved_component","update","e","$$","dirty","flush_render_callbacks","filtered","targets","c","outroing","outros","group_outros","check_outros","transition_in","block","local","transition_out","handle_promise","promise","info","token","type","index","child_ctx","needs_flush","error","update_await_block_branch","ctx","resolved","ensure_array_like","array_like_or_iterator","create_component","mount_component","fragment","after_update","new_on_destroy","destroy_component","make_dirty","init","instance","create_fragment","not_equal","props","append_styles","parent_component","ready","ret","rest","nodes","SvelteComponent","__publicField","PUBLIC_VERSION","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","theme","openedSelect","word","timer","displayingTimer","chosenDictionary","path","g","path0","path1","path2","path3","path4","path5","path6","path7","path8","g2","g1","g0","polygon","rect","create_if_block","create_if_block_1","create_if_block_2","create_if_block_3","create_if_block_4","create_if_block_5","create_if_block_6","create_if_block_7","svg","$$props","color","size","viewBox","div","label0","input0","label1","input1","icon0_changes","icon1_changes","newTheme","generateUUID","timestamp","randomValue1","randomValue2","r","t_value","option_1","option_1_value_value","t","t1_value","input_id_value","input_value_value","label","t1","button","span","icon_changes","handleChange","selectId","handleClickOnOption","handleToggleMenu","$openedSelect","opened","$$invalidate","inputValue","_a","id","onChange","div1","div0","button0","button1","dictionary","handleNewWord","timerIntervals","dictionaryOptions","handleTimerChange","action","$timer","prev","interval","handleDictionaryChange","$chosenDictionary","handleDisplayTimer","toggleOptions","click_handler","click_handler_1","h1","countdown","$displayingTimer","p","main","newWord","storedTheme","App"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10]}